class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq; 
        vector<int> res;
        for(int i = 0; i < mat.size(); ++i) {
            pq.push({accumulate(begin(mat[i]), end(mat[i]), 0), i});
        }
        while(k--) res.push_back(pq.top().second), pq.pop();
        return res;
    }
};
